# Created by generate-pxe-menu! Do NOT edit unless you know what you are doing! 
# Keep those comment "MENU DEFAULT" and "MENU HIDE"! Do NOT remove them.
# Note!!! If "serial" directive exists, it must be the first directive
default vesamenu.c32
timeout 300
prompt 0
noescape 1
 MENU MARGIN 5
 MENU RESOLUTION 800 600
 MENU BACKGROUND bg.png

# Set the color for unselected menu item and timout message
 #MENU COLOR screen     	#Rest of the screen
 MENU COLOR BORDER 7 #ff0091ff #00000000
 MENU COLOR TITLE 7 #ff0091ff #00000000
 MENU COLOR UNSEL 7 #ff0091ff #00000000
 #MENU COLOR hotkey
 MENU COLOR SEL 7 #ffffffff #00000000
 #MENU COLOR hotsel      #Selected hotkey
 #MENU COLOR disabled   	#Disabled menu item
 MENU COLOR SCROLLBAR 7 #ff0091ff #00000000           
 #MENU COLOR tabmsg     	#Press [Tab] message
 #MENU COLOR cmdmark    	#Command line marker
 #MENU COLOR cmdline    	#Command line
 #MENU COLOR pwdborder  	#Password box border
 #MENU COLOR pwdheader  	#Password box header
 #MENU COLOR pwdentry   	#Password box contents
 MENU COLOR TIMEOUT_MSG 7;32;41 #c0000090 #00000000 	
 MENU COLOR TIMEOUT 7;32;41 #c0000090 #00000000     	
 MENU COLOR HELP 7 #ffffffff #00000000  
 #MENU COLOR msgXX      	#Message (F-key) file attribute X

# MENU MASTER PASSWD
say **********************************************************************
say Configured TFTP IP: 10.0.0.26 (if wrong run getandwritepxeip.sh)
say **********************************************************************
say omniflow.cc | Backup and Wipe Threefold Node Tool
say This Tool uses sources from Clonezilla as base!
say Made by github:fl0wm0ti0n
say Date: 20230316
say base sources:
say NCHC Free Software Labs, Taiwan.
say clonezilla.org, clonezilla.nchc.org.tw
say THIS SOFTWARE COMES WITH ABSOLUTELY NO WARRANTY! USE AT YOUR OWN RISK!
say **********************************************************************

# Allow client to edit the parameters
ALLOWOPTIONS 1

# simple menu title
MENU TITLE Backup, Wipe and Maintain your Threefold Nodes

label Quickest backup the seed, just get asked for saving target
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Quick backup the seed, just get asked for saving target (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r backupconfig.json -l /tmp/backupconfig.json 10.0.0.26; busybox tftp -g -r backupnode.sh -l /tmp/backupnode.sh 10.0.0.26; chmod 777 /tmp/backupnode.sh /tmp/backupconfig.json" ocs_live_run="/tmp/backupnode.sh -b -n date" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Quick backup the seed, just get asked for saving target (scp, cifs or usb), 
    hit tab to add options like chomd, chown, timeout.
    You have to Enter: Backuptarget parameters
  ENDTEXT

label Quick backup the seed, try to get nodeid over TF GraphQL API
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Quick backup the seed, try to get nodeid over TF GraphQL API (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r backupconfig.json -l /tmp/backupconfig.json 10.0.0.26; busybox tftp -g -r backupnode.sh -l /tmp/backupnode.sh 10.0.0.26; chmod 777 /tmp/backupnode.sh /tmp/backupconfig.json" ocs_live_run="/tmp/backupnode.sh -b -x" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Quick backup the seed, try to get nodeid over TF GraphQL API. You have to 
    specify the farmId.
    You have to Enter: Backuptarget parameters, your farmId
  ENDTEXT

label Quick backup the seed, get asked for saving target and filename
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Quick backup the seed, get asked for saving target and filename (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r backupconfig.json -l /tmp/backupconfig.json 10.0.0.26; busybox tftp -g -r backupnode.sh -l /tmp/backupnode.sh 10.0.0.26; chmod 777 /tmp/backupnode.sh /tmp/backupconfig.json" ocs_live_run="/tmp/backupnode.sh -b" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Quick backup the seed, get asked for saving target (scp, cifs or usb) and 
    nodeid for filename.
    You have to Enter: Backuptarget parameters, nodeId
  ENDTEXT

label Preconfigured Backup the seed with jsonfile
  MENU DEFAULT
  # MENU HIDE*
  MENU LABEL  Preconfigured Backup the seed with jsonfile (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r backupconfig.json -l /tmp/backupconfig.json 10.0.0.26; busybox tftp -g -r backupnode.sh -l /tmp/backupnode.sh 10.0.0.26; chmod 777 /tmp/backupnode.sh /tmp/backupconfig.json" ocs_live_run="/tmp/backupnode.sh -c" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    If configured this is the fastes option since you have nothing to fill in. 
    Configure it in root\live\backupconfig.json where root is the root on USB, 
    ISO or a PXE folder. For ISO you have to run mkisofs to build the ISO out of the raw folder.
    You have to Enter: Nothing since it is preconfigured
  ENDTEXT

label Just the Shell, to everything manually
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Just the Shell, to everything manually (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r backupconfig.json -l /tmp/backupconfig.json 10.0.0.26; busybox tftp -g -r backupnode.sh -l /tmp/backupnode.sh 10.0.0.26; chmod 777 /tmp/backupnode.sh /tmp/backupconfig.json" ocs_live_run="/tmp/backupnode.sh -m" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Just the Shell, to everything manually. DHCP is active! You can also access 
    the scripts in /run/live/medium/live/.
  ENDTEXT

  label Wipe all disks
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Wipe all disks (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r wipenode.sh -l /tmp/wipenode.sh 10.0.0.26; chmod 777 /tmp/wipenode.sh" ocs_live_run="/tmp/wipenode.sh" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Wipe all disks except USB.
    You have to Enter: Nothing since it wipes everything
  ENDTEXT

  label Wipe disks manually
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Wipe disks manually (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r wipenode.sh -l /tmp/wipenode.sh 10.0.0.26; chmod 777 /tmp/wipenode.sh" ocs_live_run="/tmp/wipenode.sh -m" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Wipe disks manually. The disks will be listed, you can select to wipe it.
    You have to Enter: choose your disks
  ENDTEXT

  label Wipe disks manually TESTRUN 
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Wipe disks manually TESTRUN (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r wipenode.sh -l /tmp/wipenode.sh 10.0.0.26; chmod 777 /tmp/wipenode.sh" ocs_live_run="/tmp/wipenode.sh -m -t" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Wipe disks manually. TESTRUN NOT WIPING FOR REAL. The disks will be listed, 
    you can select to wipe it.
    You have to Enter: choose your disks
  ENDTEXT

label Mount remote cifs filesystem
  # MENU DEFAULT
  # MENU HIDE*
  MENU LABEL Mount remote cifs filesystem (VGA 800x600)
  # MENU PASSWD
  kernel vmlinuz
    append initrd=initrd.img boot=live union=overlay username=user hostname=nodebackuptool config components quiet noswap edd=on nomodeset nosplash noprompt fetch=tftp://10.0.0.26/filesystem.squashfs ocs_prerun="busybox tftp -g -r mountcifs.sh -l /tmp/mountcifs.sh 10.0.0.26; chmod +x /tmp/wipenode.sh" ocs_live_run="/tmp/mountcifs.sh" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de mode_option=800x600
  TEXT HELP
    Mount remote cifs filesystem for developing or testing the script parameters. 
    So you can edit the file on your cifs share on the workstation.
    You have to Enter: cifs remote parameters
  ENDTEXT

MENU BEGIN Memtest & FreeDOS
# Note! *.bin is specially purpose for syslinux, 
# Do NOT use memtest.bin, use memtest instead of memtest.bin
label memtest
  # MENU DEFAULT
  # MENU HIDE
  MENU LABEL Memory test using Memtest86+
  # MENU PASSWD
  kernel memtest
  TEXT HELP
    Run memory test using Memtest86+
  ENDTEXT

label FreeDOS
  # MENU DEFAULT
  # MENU HIDE
  MENU LABEL FreeDOS
  # MENU PASSWD
  kernel memdisk
  append initrd=freedos.img
  TEXT HELP
    Run FreeDOS
  ENDTEXT

MENU END

MENU END
