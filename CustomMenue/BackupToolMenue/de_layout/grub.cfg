#
set pref=/boot/grub
set default="0"
# For grub 2.04, a workaround to avoid boot failure is to add "rmmod tpm": https://bugs.debian.org/975835. However, it might fail in secure boot uEFI machine, and the error is like:
# error: verification requested but nobody cares: /live/vmlinuz.
# Out of range pointer 0x3000000004040
# Aborted. Press any key to exit. 
# rmmod tpm

# Load graphics (only corresponding ones will be found)
# (U)EFI
insmod efi_gop
insmod efi_uga
# legacy BIOS
# insmod vbe

if loadfont $pref/unicode.pf2; then
  set gfxmode=auto
  insmod gfxterm
  # Set the language for boot menu prompt, e.g., en_US, zh_TW...
  set lang=en_US
  terminal_output gfxterm
fi
set timeout="30"
set hidden_timeout_quiet=false

insmod png
if background_image $pref/bg.png; then
  set color_normal=black/black
  set color_highlight=magenta/black
else
  set color_normal=cyan/blue
  set color_highlight=white/blue
fi

# Uncomment the following for serial console
# The command serial initializes the serial unit 0 with the speed 38400bps.
# The serial unit 0 is usually called ‘COM1’. If COM2, use ‘--unit=1’ instead.
#serial --unit=0 --speed=38400
#terminal_input serial
#terminal_output serial

# Decide if the commands: linux/initrd (default) or linuxefi/initrdefi
set linux_cmd=linux
set initrd_cmd=initrd
export linux_cmd initrd_cmd
if [ "${grub_platform}" = "efi" -a -e "/amd64-release.txt" ]; then
  # Only amd64 release we switch to linuxefi/initrdefi since it works better with security boot (shim)
  set linux_cmd=linuxefi
  set initrd_cmd=initrdefi
fi

insmod play
play 960 440 1 0 4 440 1

# Since no network setting in the squashfs image, therefore if ip=, the network is disabled.

menuentry "Quick backup the seed, just get asked for saving target (VGA 800x600)" --id live-default {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/backupnode.sh -b -n date" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Quick backup the seed, try to get nodeid over TF GraphQL API (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/backupnode.sh -b -x" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Quick backup the seed, get asked for saving target and filename (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/backupnode.sh -b" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Preconfigured Backup the seed with jsonfile (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/backupnode.sh -c" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Wipe all disks except USB (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/wipenode.sh" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Wipe disks manually (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/wipenode.sh -m" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Wipe disks manually TESTRUN (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/wipenode.sh -m -t" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry "Mount remote cifs filesystem (VGA 800x600)" {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user hostname=nodebackuptool edd=on ocs_live_run="/run/live/medium/live/mountcifs.sh -m -t" ocs_live_extra_param="" ocs_live_batch="no" ocs_lang="" locales=en_US.UTF-8 keyboard-layouts=de noprompt mode_option=800x600 toram=live,syslinux,boot,utils nospalsh
  $initrd_cmd /live/initrd.img
}

menuentry --hotkey=m "Memtester (VGA 800x600 & To RAM)" --id memtester {
  search --set -f /live/vmlinuz
  $linux_cmd /live/vmlinuz boot=live union=overlay username=user config components  noswap edd=on nomodeset enforcing=0 noeject locales=en_US.UTF-8 keyboard-layouts=de ocs_live_run="ocs-live-general" ocs_live_extra_param="" ocs_live_batch="no" vga=788 toram=live,syslinux,EFI,boot,.disk,utils ip= net.ifnames=0 quiet nosplash i915.blacklist=yes radeonhd.blacklist=yes nouveau.blacklist=yes vmwgfx.enable_fbdev=1 init=/bin/bash -- -c "/sbin/ocs-memtester"
  $initrd_cmd /live/initrd.img
}

#menuentry "FreeDOS"{
#  linux16 memdisk
#  initrd /live/freedos.img
#}

menuentry "Network boot via iPXE" {
  search --no-floppy --set=root -f /live/ipxe.efi
  chainloader /live/ipxe.efi + 1
}

menuentry 'uEFI firmware setup' 'uefi-firmware' {
  echo "Entering uEFI firmware setup..."
  fwsetup
}

menuentry "backupnode tool 20220705 info"{
  echo omniflow.cc | Backup and Wipe Threefold Node Tool
  echo This Tool uses sources from Clonezilla as base!
  echo Made by github:fl0wm0ti0n
  echo Date: 20220705
  echo base sources:
  echo NCHC Free Software Labs, Taiwan.
  echo clonezilla.org, clonezilla.nchc.org.tw
  echo \* Boot menu for EFI machine
  echo \* Clonezilla live version: 20220616. (C) 2003-2022, NCHC, Taiwan
  echo \* Disclaimer: Clonezilla comes with ABSOLUTELY NO WARRANTY
  sleep --verbose --interruptible 10
}